app:
  jwt:
    token:
      access:
        expiration: 86400000
        key: 22MYlyBwOd$gXWUjlfZW0aA
      refresh:
        expiration: 604800000
        key: daskdl*))(22MYlyBwOd$gXWUjlfZW0aA
spring:
  datasource:
    password: 12
    url: jdbc:postgresql://localhost:5433/oauth2
    username: postgres
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
  security:
    oauth2:
      client:
        registration:
          facebook:
            client-id: 838403160499221
            client-secret: b20ae3e9e889ca023f98d963728abb2b
          google:
            clientId: 307499183665-tg23bfqn4qdgm46o3ujc1npv5af8obc3.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          github:
            client-id: f3678e9ac5cdb3cfc1f1
            client-secret: c56f18b92e53e88b75eb2f276f01ae2dc0f40f0f
          linkedin:
            client-id: 77k12jvpkpi3ek
            client-secret: dthLREQsEOXf80GL
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/taco/design/
            scope:
              - r_emailaddress
              - r_liteprofile
              - w_member_social
        provider:
          linkedin:
            authorization-uri: https://www.linkedin.com/oauth/v2/authorization
            token-uri: https://www.linkedin.com/oauth/v2/accessToken